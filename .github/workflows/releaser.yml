on:
  push:
    tags:
      - '*'
permissions:
  contents: write
  packages: write
name: Release
jobs:
  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.x
          check-latest: true
      - name: Set build info
        run: |
          echo "USER=$(whoami)" >> $GITHUB_ENV
          echo "HOSTNAME=$(hostname)" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USER: ${{ env.USER }}
          HOSTNAME: ${{ env.HOSTNAME }}
      - name: Install QEMU
        uses: docker/setup-qemu-action@v3
      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Link artifacts for Docker
        run: |
          ln -s clamav_exporter_linux_amd64_v1 dist/clamav_exporter_linux_amd64
          ln -s clamav_exporter_linux_arm_7 dist/clamav_exporter_linux_arm
          ln -s clamav_exporter_linux_arm64_v8.0 dist/clamav_exporter_linux_arm64
          ln -s clamav_exporter_linux_ppc64le_power8 dist/clamav_exporter_linux_ppc64le
      - name: Set up Docker Build Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable=${{ !contains(github.ref_name, '-') }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: ${{ steps.meta.outputs.tags }}
